// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebUIApp.Data;

namespace WebUIApp.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("WebUIApp.Models.BuySell", b =>
                {
                    b.Property<int>("BuyselId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuySellStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("BuyselId");

                    b.ToTable("buysell");
                });

            modelBuilder.Entity("WebUIApp.Models.CAlert", b =>
                {
                    b.Property<int>("alertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastTrueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MessageID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOFAlert")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOFTrigger")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RuleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("createdate")
                        .HasColumnType("TEXT");

                    b.HasKey("alertId");

                    b.HasIndex("MessageID");

                    b.HasIndex("RuleID");

                    b.ToTable("AlertInfo");
                });

            modelBuilder.Entity("WebUIApp.Models.CBot", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyselId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("baseordersize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("botid")
                        .HasColumnType("TEXT");

                    b.Property<int?>("buySellBuyselId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("createdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("delay")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("MessageID");

                    b.HasIndex("StatusId");

                    b.HasIndex("buySellBuyselId");

                    b.ToTable("BotInfo");
                });

            modelBuilder.Entity("WebUIApp.Models.CMessage", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MessageID");

                    b.ToTable("messageinfo");
                });

            modelBuilder.Entity("WebUIApp.Models.CRuleInfo", b =>
                {
                    b.Property<int>("RuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target")
                        .HasColumnType("INTEGER");

                    b.HasKey("RuleID");

                    b.HasIndex("StatusId");

                    b.ToTable("RuleInfo");
                });

            modelBuilder.Entity("WebUIApp.Models.ServiceStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("StatusId");

                    b.ToTable("serviceStatus");
                });

            modelBuilder.Entity("WebUIApp.Models.TradeviewAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("alertmessage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TradeviewAlert_API");
                });

            modelBuilder.Entity("WebUIApp.Models.CAlert", b =>
                {
                    b.HasOne("WebUIApp.Models.CMessage", "Message")
                        .WithMany()
                        .HasForeignKey("MessageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebUIApp.Models.CRuleInfo", "Rule")
                        .WithMany()
                        .HasForeignKey("RuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebUIApp.Models.CBot", b =>
                {
                    b.HasOne("WebUIApp.Models.CMessage", "Message")
                        .WithMany()
                        .HasForeignKey("MessageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebUIApp.Models.ServiceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebUIApp.Models.BuySell", "buySell")
                        .WithMany()
                        .HasForeignKey("buySellBuyselId");
                });

            modelBuilder.Entity("WebUIApp.Models.CRuleInfo", b =>
                {
                    b.HasOne("WebUIApp.Models.ServiceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
